// Project structure:
// react-event-app
// ├── package.json
// ├── tailwind.config.js
// ├── postcss.config.cjs
// ├── public
// │   └── index.html
// └── src
//     ├── index.js
//     ├── index.css
//     ├── App.js
//     ├── services
//     │   └── eventService.js
//     └── components
//         ├── EventForm.js
//         └── EventList.js

// package.json
{
  "name": "react-event-app",
  "version": "1.0.0",
  "private": true,
  "dependencies": {
    "react": "^18.2.0",
    "react-dom": "^18.2.0",
    "date-fns": "^2.30.0",
    "react-scripts": "5.0.1"
  },
  "scripts": {
    "start": "react-scripts start",
    "build": "react-scripts build",
    "test": "react-scripts test",
    "eject": "react-scripts eject"
  }
}

// tailwind.config.js
module.exports = {
  content: ["./src/**/*.{js,jsx,ts,tsx}", "./public/index.html"],
  theme: { extend: {} },
  plugins: [],
};

// postcss.config.cjs
module.exports = {
  plugins: {
    tailwindcss: {},
    autoprefixer: {},
  },
};

// public/index.html
<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8" />
  <meta name="viewport" content="width=device-width, initial-scale=1" />
  <title>React Event App</title>
</head>
<body class="bg-gray-50">
  <noscript>You need to enable JavaScript to run this app.</noscript>
  <div id="root"></div>
</body>
</html>

// src/index.js
import React from "react";
import ReactDOM from "react-dom";
import App from "./App";
import "./index.css";

ReactDOM.render(
  <React.StrictMode>
    <App />
  </React.StrictMode>,
  document.getElementById("root")
);

// src/index.css
@tailwind base;
@tailwind components;
@tailwind utilities;

// src/services/eventService.js
const STORAGE_KEY = 'events';

export function getEvents() {
  const raw = localStorage.getItem(STORAGE_KEY) || '[]';
  return JSON.parse(raw);
}

export function saveEvents(events) {
  localStorage.setItem(STORAGE_KEY, JSON.stringify(events));
}

// src/App.js
import React, { useState, useEffect } from "react";
import { getEvents, saveEvents } from "./services/eventService";
import EventForm from "./components/EventForm";
import EventList from "./components/EventList";

function App() {
  const [events, setEvents] = useState([]);
  const [current, setCurrent] = useState(null);

  useEffect(() => {
    setEvents(getEvents());
  }, []);

  useEffect(() => {
    saveEvents(events);
  }, [events]);

  const handleAdd = event => setEvents(prev => [...prev, event]);
  const handleUpdate = updated => {
    setEvents(prev => prev.map(ev => ev.id === updated.id ? updated : ev));
    setCurrent(null);
  };
  const handleDelete = id => setEvents(prev => prev.filter(ev => ev.id !== id));
  const handleEdit = ev => setCurrent(ev);

  return (
    <div className="max-w-xl mx-auto p-6">
      <h1 className="text-2xl font-bold mb-4">Gestion d'événements</h1>
      <EventForm key={current ? current.id : "new"} onAdd={handleAdd} onUpdate={handleUpdate} current={current} />
      <EventList events={events} onEdit={handleEdit} onDelete={handleDelete} />
    </div>
  );
}

export default App;

// src/components/EventForm.js
import React, { useState, useEffect } from "react";
import { formatISO } from "date-fns";

function EventForm({ onAdd, onUpdate, current }) {
  const [title, setTitle] = useState("");
  const [desc, setDesc] = useState("");
  const [datetime, setDatetime] = useState(formatISO(new Date()).slice(0,16));

  useEffect(() => {
    if (current) {
      setTitle(current.title);
      setDesc(current.desc);
      setDatetime(current.datetime);
    }
  }, [current]);

  const handleSubmit = e => {
    e.preventDefault();
    const ev = { id: current ? current.id : Date.now(), title, desc, datetime };
    current ? onUpdate(ev) : onAdd(ev);
    setTitle(""); setDesc(""); setDatetime(formatISO(new Date()).slice(0,16));
  };

  return (
    <form onSubmit={handleSubmit} className="bg-white p-4 rounded shadow mb-6">
      <div className="mb-2"><label className="block mb-1">Titre</label><input type="text" className="w-full border px-2 py-1 rounded" value={title} onChange={e => setTitle(e.target.value)} required /></div>
      <div className="mb-2"><label className="block mb-1">Description</label><textarea className="w-full border px-2 py-1 rounded" value={desc} onChange={e => setDesc(e.target.value)} rows={3} /></div>
      <div className="mb-4"><label className="block mb-1">Date & heure</label><input type="datetime-local" className="w-full border px-2 py-1 rounded" value={datetime} onChange={e => setDatetime(e.target.value)} required /></div>
      <button type="submit" className="bg-blue-600 text-white px-4 py-2 rounded hover:bg-blue-700">{current ? "Mettre à jour" : "Ajouter"}</button>
    </form>
  );
}

export default EventForm;

// src/components/EventList.js
import React from "react";
import { format } from "date-fns";

function EventList({ events, onEdit, onDelete }) {
  if (events.length === 0) return <p>Aucun événement.</p>;
  const sorted = [...events].sort((a,b) => new Date(b.datetime) - new Date(a.datetime));
  return (
    <ul>
      {sorted.map(ev => (
        <li key={ev.id} className="bg-white p-4 mb-2 rounded shadow flex justify-between items-start">
          <div>
            <h2 className="font-semibold">{ev.title}</h2>
            <p className="text-sm text-gray-600">{format(new Date(ev.datetime), "dd/MM/yyyy HH:mm")}</p>
            <p className="mt-1">{ev.desc}</p>
          </div>
          <div className="flex space-x-2">
            <button onClick={() => onEdit(ev)} className="text-yellow-600 hover:underline">Éditer</button>
            <button onClick={() => onDelete(ev.id)} className="text-red-600 hover:underline">Supprimer</button>
          </div>
        </li>
      ))}
    </ul>
  );
}

export default EventList;

